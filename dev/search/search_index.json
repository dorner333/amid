{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Awesome Medical Imaging Datasets (AMID) - a curated list of medical imaging datasets with unified interfaces Getting started Just import a dataset and start using it! Note that for some datasets you must manually download the raw files first. from amid.verse import VerSe ds = VerSe () # get the available ids print ( len ( ds . ids )) i = ds . ids [ 0 ] # use the available methods: # load the image and vertebrae masks x , y = ds . image ( i ), ds . masks ( i ) print ( ds . split ( i ), ds . patient ( i )) # or get a namedTuple-like object: entry = ds ( i ) x , y = entry . image , entry . masks print ( entry . split , entry . patient ) Install Just get it from PyPi: pip install amid Or if you want to use version control features: git clone https://github.com/neuro-ml/amid.git cd amid && pip install -e .","title":"Home"},{"location":"#getting-started","text":"Just import a dataset and start using it! Note that for some datasets you must manually download the raw files first. from amid.verse import VerSe ds = VerSe () # get the available ids print ( len ( ds . ids )) i = ds . ids [ 0 ] # use the available methods: # load the image and vertebrae masks x , y = ds . image ( i ), ds . masks ( i ) print ( ds . split ( i ), ds . patient ( i )) # or get a namedTuple-like object: entry = ds ( i ) x , y = entry . image , entry . masks print ( entry . split , entry . patient )","title":"Getting started"},{"location":"#install","text":"Just get it from PyPi: pip install amid Or if you want to use version control features: git clone https://github.com/neuro-ml/amid.git cd amid && pip install -e .","title":"Install"},{"location":"datasets-api/","text":"Datasets API amid.ct_ich.CT_ICH (C)omputed (T)omography Images for (I)ntracranial (H)emorrhage Detection and (S)egmentation. This dataset contains 75 head CT scans including 36 scans for patients diagnosed with intracranial hemorrhage with the following types: Intraventricular, Intraparenchymal, Subarachnoid, Epidural and Subdural. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes required Data required Then required the required Examples required ids () image ( id : str ) mask ( id : str ) affine ( id : str ) The 4x4 matrix that gives the image's spatial orientation. voxel_spacing ( id : str ) Returns voxel spacing along axes (x, y, z). age ( id : str ) gender ( id : str ) intraventricular_hemorrhage ( id : str ) Returns True if hemorrhage exists and its type is intraventricular. intraparenchymal_hemorrhage ( id : str ) Returns True if hemorrhage was diagnosed and its type is intraparenchymal. subarachnoid_hemorrhage ( id : str ) Returns True if hemorrhage was diagnosed and its type is subarachnoid. epidural_hemorrhage ( id : str ) Returns True if hemorrhage was diagnosed and its type is epidural. subdural_hemorrhage ( id : str ) Returns True if hemorrhage was diagnosed and its type is subdural. fracture ( id : str ) Returns True if skull fracture was diagnosed. notes ( id : str ) Returns special notes if they exist. hemorrhage_diagnosis_raw_metadata ( id : str ) amid.lidc.dataset.LIDC The (L)ung (I)mage (D)atabase (C)onsortium image collection (LIDC-IDRI) [1]_ consists of diagnostic and lung cancer screening thoracic computed tomography (CT) scans with marked-up annotated lesions and lung nodules segmentation task. Scans contains multiple expert annotations. Number of CT scans: 1018. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes Follow the download instructions at https://wiki.cancerimagingarchive.net/display/Public/LIDC-IDRI. Then, the folder with raw downloaded data should contain folder LIDC-IDRI , which contains folders LIDC-IDRI-* . Examples: >>> # Place the downloaded archives in any folder and pass the path to the constructor: >>> ds = LIDC ( root = '/path/to/downloaded/data/folder/' ) >>> print ( len ( ds . ids )) # 1018 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (512, 512, 194) >>> print ( ds . cancer ( ds . ids [ 0 ]) . shape ) # (512, 512, 194) References .. [1] Armato III, McLennan, et al. \"The lung image database consortium (lidc) and image database resource initiative (idri): a completed reference database of lung nodules on ct scans.\" Medical physics 38(2) (2011): 915\u2013931. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3041807/ ids () image ( id : str ) study_uid ( id : str ) series_uid ( id : str ) patient_id ( id : str ) sop_uids ( id : str ) pixel_spacing ( id : str ) slice_locations ( id : str ) voxel_spacing ( id : str ) Returns voxel spacing along axes (x, y, z). contrast_used ( id : str ) If the DICOM file for the scan had any Contrast tag, this is marked as True . is_from_initial ( id : str ) Indicates whether or not this PatientID was tagged as part of the initial 399 release. orientation_matrix ( id : str ) conv_kernel ( id : str ) kvp ( id : str ) study_date ( id : str ) accession_number ( id : str ) nodules ( id : str ) nodules_masks ( id : str ) cancer ( id : str ) amid.mood.MOOD A (M)edival (O)ut-(O)f-(D)istribution analysis challenge [1]_ This dataset contains raw brain MRI and abdomainal CT images. Number of training samples: - Brain: 800 scans ( 256 x 256 x 256 ) - Abdominal: 550 scans ( 512 x 512 x 512 ) For each setup there are 4 toy test samples with OOD cases. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes Follow the download instructions at https://www.synapse.org/#!Synapse:syn21343101/wiki/599515. Then, the folder with raw downloaded data should contain four zip archives with data ( abdom_toy.zip , abdom_train.zip , brain_toy.zip and brain_train.zip ). Examples: >>> # Place the downloaded archives in any folder and pass the path to the constructor: >>> ds = MOOD ( root = '/path/to/downloaded/data/folder/' ) >>> print ( len ( ds . ids )) # 1358 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (512, 512, 512) >>> print ( ds . pixel_label ( ds . ids [ 0 ]) . shape ) # (512, 512, 512) References .. [1] Zimmerer, Petersen, et al. \"Medical Out-of-Distribution Analysis Challenge 2022.\" doi: 10.5281/zenodo.6362313 (2022). ids () fold ( id : str ) Returns fold: train or toy (test). task ( id : str ) Returns task: brain (MRI) or abdominal (CT). image ( id : str ) affine ( id : str ) The 4x4 matrix that gives the image's spatial orientation. voxel_spacing ( id : str ) Returns voxel spacing along axes (x, y, z). sample_label ( id : str ) Returns sample-level OOD score for toy examples and None otherwise. 0 indicates no abnormality and 1 indicates abnormal input. pixel_label ( id : str ) Returns voxel-level OOD scores for toy examples and None otherwise. 0 indicates no abnormality and 1 indicates abnormal input. amid.medseg9.Medseg9 Medseg9 is a public COVID-19 CT segmentation dataset with 9 annotated images. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes Data can be downloaded here: http://medicalsegmentation.com/covid19/. Then, the folder with raw downloaded data should contain three zip archives with data and masks ( rp_im.zip , rp_lung_msk.zip , rp_msk.zip ). Examples: >>> # Place the downloaded archives in any folder and pass the path to the constructor: >>> ds = Medseg9 ( root = '/path/to/downloaded/data/folder/' ) >>> print ( len ( ds . ids )) # 9 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (630, 630, 45) >>> print ( ds . covid ( ds . ids [ 0 ]) . shape ) # (630, 630, 45) ids () image ( id : str ) affine ( id : str ) The 4x4 matrix that gives the image's spatial orientation. voxel_spacing ( id : str ) Returns voxel spacing along axes (x, y, z). lungs ( id : str ) Boolean mask. Lungs are not separated. covid ( id : str ) int16 mask. 0 - normal, 1 - ground-glass opacities (\u043c\u0430\u0442\u043e\u0432\u043e\u0435 \u0441\u0442\u0435\u043a\u043b\u043e), 2 - consolidation (\u043a\u043e\u043d\u0441\u043e\u043b\u0438\u0434\u0430\u0446\u0438\u044f). amid.vs_seg.VSSEG Segmentation of vestibular schwannoma from MRI, an open annotated dataset ... (VS-SEG) [1]_. The dataset contains 250 pairs of T1c and T2 images of the brain with the vestibular schwannoma segmentation task. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes The dataset and corresponding metadata could be downloaded at the TCIA page: https://wiki.cancerimagingarchive.net/pages/viewpage.action?pageId=70229053. To download DICOM images using .tcia file, we use public build of TCIA downloader: https://github.com/ygidtu/NBIA_data_retriever_CLI. Then, download the rest of metadata from TCIA page: - DirectoryNamesMappingModality.csv - Vestibular-Schwannoma-SEG_matrices Mar 2021.zip - Vestibular-Schwannoma-SEG contours Mar 2021.zip and unzip the latter two .zip archives. So the root folder to pass to this dataset should contain 3 folders and 1 .csv file: <...>/DirectoryNamesMappingModality.csv <...>/Vestibular-Schwannoma-SEG/ \u251c\u2500\u2500 VS-SEG-001/... \u251c\u2500\u2500 VS-SEG-002/... \u2514\u2500\u2500 ... <...>/contours/ <...>/registration_matrices/ Examples: >>> # Place the downloaded archives in any folder and pass the path to the constructor: >>> ds = VSSEG ( root = '/path/to/downloaded/data/folder/' ) >>> print ( len ( ds . ids )) # 250 >>> print ( ds . image_t1 ( ds . ids [ 0 ]) . shape ) # (512, 512, 120) >>> print ( ds . schwannoma_t1 ( ds . ids [ 80 ]) . shape ) # (512, 512, 120) References .. [1] Shapey, Jonathan, et al. \"Segmentation of vestibular schwannoma from MRI, an open annotated dataset and baseline algorithm.\" Scientific Data 8.1 (2021): 1-6. https://www.nature.com/articles/s41597-021-01064-w ids () registration_matrix_t1_to_t2_params ( id : str ) registration_matrix_t2_to_t1_params ( id : str ) contours_t1 ( id : str ) contours_t2 ( id : str ) normed_contours_t1 ( id : str ) normed_contours_t2 ( id : str ) has_schwannoma ( id : str ) has_cochlea ( id : str ) has_meningioma ( id : str ) schwannoma_t1 ( id : str ) schwannoma_t2 ( id : str ) cochlea_t1 ( id : str ) cochlea_t2 ( id : str ) meningioma_t1 ( id : str ) meningioma_t2 ( id : str ) image_t1 ( id : str ) image_t2 ( id : str ) study_uid ( id : str ) series_uid_t1 ( id : str ) series_uid_t2 ( id : str ) pixel_spacing_t1 ( id : str ) pixel_spacing_t2 ( id : str ) slice_locations_t1 ( id : str ) slice_locations_t2 ( id : str ) voxel_spacing_t1 ( id : str ) voxel_spacing_t2 ( id : str ) orientation_matrix_t1 ( id : str ) orientation_matrix_t2 ( id : str ) patient_position_t1 ( id : str ) patient_position_t2 ( id : str ) patient_id ( id : str ) study_date ( id : str ) amid.verse.VerSe A Vertebral Segmentation Dataset with Fracture Grading [1]_ The dataset was used in the MICCAI-2019 and MICCAI-2020 Vertebrae Segmentation Challenges. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes Download links: 2019: https://osf.io/jtfa5/ 2020: https://osf.io/4skx2/ Examples: >>> # Place the downloaded archives in any folder and pass the path to the constructor: >>> ds = VerSe ( root = '/path/to/archives/root' ) >>> print ( len ( ds . ids )) # 374 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (512, 512, 214) References .. [1] L\u00f6ffler MT, Sekuboyina A, Jacob A, et al. A Vertebral Segmentation Dataset with Fracture Grading. Radiol Artif Intell. 2020;2(4):e190138. Published 2020 Jul 29. doi:10.1148/ryai.2020190138 ids () image ( id : str ) affine ( id : str ) The 4x4 matrix that gives the image's spatial orientation split ( id : str ) The split in which this entry is contained: training, validate, test patient ( id : str ) The unique patient id year ( id : str ) The year in which this entry was published: 2019, 2020 centers ( id : str ) Vertebrae centers in format {label: [x, y, z]} masks ( id : str ) -> Union [ np . ndarray , None ] Vertebrae masks","title":"Datasets API"},{"location":"datasets-api/#datasets-api","text":"","title":"Datasets API"},{"location":"datasets-api/#amid.ct_ich.CT_ICH","text":"(C)omputed (T)omography Images for (I)ntracranial (H)emorrhage Detection and (S)egmentation. This dataset contains 75 head CT scans including 36 scans for patients diagnosed with intracranial hemorrhage with the following types: Intraventricular, Intraparenchymal, Subarachnoid, Epidural and Subdural. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes required Data required Then required the required Examples required","title":"CT_ICH"},{"location":"datasets-api/#amid.lidc.dataset.LIDC","text":"The (L)ung (I)mage (D)atabase (C)onsortium image collection (LIDC-IDRI) [1]_ consists of diagnostic and lung cancer screening thoracic computed tomography (CT) scans with marked-up annotated lesions and lung nodules segmentation task. Scans contains multiple expert annotations. Number of CT scans: 1018. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required","title":"LIDC"},{"location":"datasets-api/#amid.mood.MOOD","text":"A (M)edival (O)ut-(O)f-(D)istribution analysis challenge [1]_ This dataset contains raw brain MRI and abdomainal CT images. Number of training samples: - Brain: 800 scans ( 256 x 256 x 256 ) - Abdominal: 550 scans ( 512 x 512 x 512 ) For each setup there are 4 toy test samples with OOD cases. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required","title":"MOOD"},{"location":"datasets-api/#amid.medseg9.Medseg9","text":"Medseg9 is a public COVID-19 CT segmentation dataset with 9 annotated images. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required","title":"Medseg9"},{"location":"datasets-api/#amid.vs_seg.VSSEG","text":"Segmentation of vestibular schwannoma from MRI, an open annotated dataset ... (VS-SEG) [1]_. The dataset contains 250 pairs of T1c and T2 images of the brain with the vestibular schwannoma segmentation task. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required","title":"VSSEG"},{"location":"datasets-api/#amid.verse.VerSe","text":"A Vertebral Segmentation Dataset with Fracture Grading [1]_ The dataset was used in the MICCAI-2019 and MICCAI-2020 Vertebrae Segmentation Challenges. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required","title":"VerSe"},{"location":"datasets/","text":"Datasets Name Entries Body region Licence Link Modality Prep data size Raw data size Task CT_ICH 75 Head PhysioNet Restricted Health Data License 1.5.0 CT Intracranial hemorrhage segmentation LIDC 1018 Chest TCIA Data Usage Policy and Creative Commons Attribution 3.0 Unported License CT lung nodule segmentation MOOD 1358 Head / abdominal MRI / CT Out-of-distribution detection Medseg9 9 Chest CT COVID-19 segmentation VSSEG 242 Head CC BY 4.0 Source ('MRI T1c', 'MRI T2') 27G Segmentation VerSe 374 Thorax, Abdomen CT Vertebrae Segmentation","title":"Datasets"},{"location":"datasets/#datasets","text":"Name Entries Body region Licence Link Modality Prep data size Raw data size Task CT_ICH 75 Head PhysioNet Restricted Health Data License 1.5.0 CT Intracranial hemorrhage segmentation LIDC 1018 Chest TCIA Data Usage Policy and Creative Commons Attribution 3.0 Unported License CT lung nodule segmentation MOOD 1358 Head / abdominal MRI / CT Out-of-distribution detection Medseg9 9 Chest CT COVID-19 segmentation VSSEG 242 Head CC BY 4.0 Source ('MRI T1c', 'MRI T2') 27G Segmentation VerSe 374 Thorax, Abdomen CT Vertebrae Segmentation","title":"Datasets"}]}